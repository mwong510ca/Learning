******************************************************************************
*  memory
******************************************************************************

Computing memory of CircularSuffixArray
*-----------------------------------------------------------
Memory usage of a CircularSuffixArray with a random string of length N.
Maximum allowed memory is 25x the reference.

                 N       student (bytes)    reference (bytes)     ratio
-----------------------------------------------------------------------
=> passed       10          104                 96                 1.08
=> passed       20          144                136                 1.06
=> passed       50          264                256                 1.03
=> passed      100          464                456                 1.02
=> passed      200          864                856                 1.01
=> passed      500         2064               2056                 1.00
=> passed     1000         4064               4056                 1.00
=> passed     2000         8064               8056                 1.00
=> passed     4000        16064              16056                 1.00
=> passed     8000        32064              32056                 1.00

Estimated student   memory (bytes) = 4.00 N + 64.00   (R^2 = 1.000)
Estimated reference memory (bytes) = 4.00 N + 56.00   (R^2 = 1.000)
================================================================

******************************************************************************
*  timing
******************************************************************************

Timing CircularSuffixArray
*-----------------------------------------------------------
Tests 1-13: Timing constructor with random ASCII strings of length N
Max allowed time per constructor call is 10 seconds and <= 3x reference.

                 N    student  reference      ratio
---------------------------------------------------
=> passed     1000       0.00       0.00       1.33
=> passed     2000       0.00       0.00       0.63
=> passed     4000       0.00       0.00       1.00
=> passed     8000       0.00       0.00       1.06
=> passed    16000       0.00       0.00       0.93
=> passed    32000       0.01       0.01       0.95
=> passed    64000       0.01       0.02       0.58
=> passed   128000       0.01       0.03       0.39
=> passed   256000       0.04       0.05       0.88
=> passed   512000       0.05       0.07       0.73
=> passed  1024000       0.07       0.15       0.46
=> passed  2048000       0.12       0.34       0.35
=> passed  4096000       0.33       1.04       0.32

Estimated runtime (using last 6 measurements) = 1.33e-06 * N^0.80  (R^2 = 0.94)


Tests 14-26: Timing constructor with first N character of dickens.txt
Max allowed time per constructor call is 10 seconds and <= 3x reference.

                 N    student  reference      ratio
---------------------------------------------------
=> passed     1000       0.00       0.00       1.01
=> passed     2000       0.00       0.00       0.84
=> passed     4000       0.00       0.00       0.82
=> passed     8000       0.00       0.00       0.78
=> passed    16000       0.00       0.00       0.86
=> passed    32000       0.00       0.00       0.85
=> passed    64000       0.01       0.01       0.85
=> passed   128000       0.02       0.02       0.87
=> passed   256000       0.04       0.05       0.88
=> passed   512000       0.11       0.10       1.12
=> passed  1024000       0.29       0.23       1.28
=> passed  2048000       0.45       0.46       0.97
=> passed  4096000       1.21       1.09       1.11

Estimated runtime (using last 6 measurements) = 1.27e-08 * N^1.21  (R^2 = 0.99)


Running 26 total tests.

Total: 26/26 tests passed!

================================================================

Timing MoveToFront
*-----------------------------------------------------------
Running 26 total tests.

Tests 1-13: Timing encode() with first N character of dickens.txt
Max allowed time is 10 seconds and <= 2x reference.

                 N    student  reference      ratio
---------------------------------------------------
=> passed     1000       0.00       0.00       1.55
=> passed     2000       0.00       0.00       1.48
=> passed     4000       0.00       0.00       1.29
=> passed     8000       0.00       0.00       2.26
=> passed    16000       0.00       0.00       0.97
=> passed    32000       0.01       0.01       0.89
=> passed    64000       0.03       0.01       4.58
=> passed   128000       0.01       0.01       0.86
=> passed   256000       0.02       0.01       1.12
=> passed   512000       0.03       0.03       0.92
=> passed  1024000       0.05       0.06       0.94
=> passed  2048000       0.10       0.11       0.91
=> passed  4096000       0.21       0.23       0.92

Estimated runtime (using last 6 measurements) = 2.14e-07 * N^0.90  (R^2 = 1.00)


Tests 14-26: Timing decode() with first N character of dickens.txt
Max allowed time is 10 seconds and <= 2x reference.

                 N    student  reference      ratio
---------------------------------------------------
=> passed     1000       0.00       0.00       1.17
=> passed     2000       0.00       0.00       0.96
=> passed     4000       0.00       0.00       0.98
=> passed     8000       0.00       0.00       1.40
=> passed    16000       0.00       0.00       0.92
=> passed    32000       0.00       0.00       0.90
=> passed    64000       0.00       0.00       0.91
=> passed   128000       0.01       0.01       0.90
=> passed   256000       0.01       0.01       0.90
=> passed   512000       0.03       0.03       0.92
=> passed  1024000       0.05       0.06       0.92
=> passed  2048000       0.11       0.15       0.75
=> passed  4096000       0.26       0.29       0.92

Estimated runtime (using last 6 measurements) = 2.42e-08 * N^1.06  (R^2 = 1.00)
Total: 26/26 tests passed!

================================================================

******************************************************************************
*  timing (substituting reference CircularSuffixArray.java)
******************************************************************************

Timing BurrowsWheeler
*-----------------------------------------------------------
Running 26 total tests.

Tests 1-13: Timing encode() with first N character of dickens.txt
Max allowed time is 10 seconds and <= 2x reference.

                 N    student  reference      ratio
---------------------------------------------------
=> passed     1000       0.01       0.00       1.80
=> passed     2000       0.00       0.00       0.85
=> passed     4000       0.00       0.00       0.84
=> passed     8000       0.01       0.01       1.25
=> passed    16000       0.01       0.01       0.85
=> passed    32000       0.01       0.01       0.81
=> passed    64000       0.02       0.02       1.07
=> passed   128000       0.03       0.04       0.88
=> passed   256000       0.07       0.07       1.06
=> passed   512000       0.09       0.13       0.66
=> passed  1024000       0.21       0.29       0.74
=> passed  2048000       0.48       0.62       0.78
=> passed  4096000       1.10       1.35       0.81

Estimated runtime (using last 6 measurements) = 2.71e-07 * N^0.99  (R^2 = 0.98)

Tests 14-26: Timing decode() with first N character of dickens.txt
Max allowed time is 10 seconds and <= 2x reference.

                 N    student  reference      ratio
---------------------------------------------------
=> passed     1000       0.00       0.00       1.20
=> passed     2000       0.00       0.00       0.81
=> passed     4000       0.00       0.00       0.80
=> passed     8000       0.00       0.00       0.82
=> passed    16000       0.00       0.00       0.62
=> passed    32000       0.00       0.00       0.78
=> passed    64000       0.00       0.01       0.82
=> passed   128000       0.01       0.01       0.66
=> passed   256000       0.01       0.02       0.58
=> passed   512000       0.02       0.02       1.36
=> passed  1024000       0.04       0.04       0.87
=> passed  2048000       0.09       0.08       1.14
=> passed  4096000       0.31       0.30       1.05

Estimated runtime (using last 6 measurements) = 2.35e-08 * N^1.05  (R^2 = 0.96)
Total: 26/26 tests passed!

================================================================

*********************************************************
compressing:
*********************************************************
Computing compression of BurrowsWheeler and MoveToFront 
CPU limit = 60 seconds

cat     = size (in bytes) of input file
HUFE    = size (in bytes) of Huffman encoding
burrows = size (in bytes) of BWT, MTF, and Huffman encoding (with a * if wrong size)
gzip    = size (in bytes) of gzip encoding

Data File                       cat      HUFE   burrows      gzip
-----------------------------------------------------------------

abra.txt                         12        15        19        39
nomatch.txt                      73       153       148       105
world-quarter.txt            622786    393153    166587    187791
world192.txt                2473400   1558717    604601    724606
=================================================================